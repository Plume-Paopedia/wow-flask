version: '3.8'

services:
  # Application Flask
  web:
    build:
      context: .
      target: development
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=true
      - DATABASE_URL=postgresql://wowflask:wowflask@db:5432/wowflask
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
    volumes:
      - .:/app
      - uploads:/app/uploads
      - logs:/app/logs
    depends_on:
      - db
      - redis
    command: flask --app app run --host=0.0.0.0 --port=5000 --debug

  # Base de données PostgreSQL
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=wowflask
      - POSTGRES_USER=wowflask  
      - POSTGRES_PASSWORD=wowflask
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # Cache Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # Meilisearch (optionnel)
  meilisearch:
    image: getmeili/meilisearch:v1.5
    ports:
      - "7700:7700"
    environment:
      - MEILI_MASTER_KEY=dev-master-key-change-in-production
      - MEILI_ENV=development
    volumes:
      - meilisearch_data:/meili_data

  # Celery Worker (optionnel)
  worker:
    build:
      context: .
      target: development
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://wowflask:wowflask@db:5432/wowflask
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    volumes:
      - .:/app
      - uploads:/app/uploads
    depends_on:
      - db
      - redis
    command: celery -A app.celery worker --loglevel=info

  # Celery Beat (planificateur de tâches)
  scheduler:
    build:
      context: .
      target: development
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://wowflask:wowflask@db:5432/wowflask
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    command: celery -A app.celery beat --loglevel=info

  # Nginx (pour la production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - uploads:/app/uploads:ro
      - static:/app/static:ro
    depends_on:
      - web
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  meilisearch_data:
  uploads:
  logs:
  static:

# Réseaux pour isoler les services si nécessaire
networks:
  default:
    name: wowflask_network